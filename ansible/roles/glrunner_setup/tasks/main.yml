---
# tasks file for glrunner_setup

  - set_fact: compose_dir=/opt/gitlab/runner
    tags: docker-compose

  - name: Make sure {{ compose_dir }} exists
    file:
      path: "{{ compose_dir }}"
      state: directory
      owner: root
      group: root
    tags: docker-compose

  - name: Upload docker files
    synchronize:
      src: "{{ item }}"
      dest: "{{ compose_dir }}"
    with_items:
      - docker-compose.yml
    tags: docker-compose

  # - name: Edit docker-compose.yml with volume_gitlab_runner
  #   replace:
  #     dest: "{{ compose_dir }}/docker-compose.yml"
  #     regexp: 'VOLUME_GITLAB_RUNNER'
  #     replace: "{{ volume_gitlab_runner }}"
  #   tags: docker-compose
  #
  # - name: Edit docker-compose.yml with volume_ssl_certs
  #   replace:
  #     dest: "{{ compose_dir }}/docker-compose.yml"
  #     regexp: 'VOLUME_SSL_CERTS'
  #     replace: "{{ volume_ssl_certs }}"
  #   tags: docker-compose

  - name: Edit docker-compose.yml with docker_dns
    replace:
      dest: "{{ compose_dir }}/docker-compose.yml"
      regexp: 'DOCKER_DNS'
      replace: "{{ docker_dns }}"
    tags: docker-compose

  - name: Edit docker-compose.yml with ci_server_url
    replace:
      dest: "{{ compose_dir }}/docker-compose.yml"
      regexp: 'CI_SERVER_URL'
      replace: "CI_SERVER_URL={{ ci_server_url }}"
    tags: docker-compose

  - name: Edit docker-compose.yml with registration_token
    replace:
      dest: "{{ compose_dir }}/docker-compose.yml"
      regexp: 'REGISTRATION_TOKEN'
      replace: "REGISTRATION_TOKEN={{ registration_token }}"
    tags: docker-compose

  - name: Edit docker-compose.yml with user_name
    replace:
      dest: "{{ compose_dir }}/docker-compose.yml"
      regexp: 'USER'
      replace: "{{ user_name }}"
    tags: docker-compose

  - name: Start docker daemon
    service: name=docker state=started enabled=yes
    tags: docker-compose

  - name: Start docker-compose pull
    command: 'docker-compose pull'
    args:
      chdir: "{{ compose_dir }}"
    tags: docker-compose

  # - name: docker-compose via ansible docker_service
  #   docker_service:
  #     project_src: "{{ compose_dir }}"
  #     project_name: "runner"
  #     pull: true
  #     state: present
  #     restarted: false
  #   register: output
  #   tags: docker-compose
  #
  # - debug: var=output
